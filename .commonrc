if [ ! -f ~/.bash_git ]; then
    wget --quiet https://raw.githubusercontent.com/inferont/shell-scripts/master/.bash_git -O ~/.bash_git
fi
if [ ! -f ~/.commonrc ]; then
    wget --quiet https://raw.githubusercontent.com/inferont/shell-scripts/master/.commonrc -O ~/.commonrc
fi
source ~/.bash_git
mkdir -p ~/bin
export PATH=~/bin:$PATH

## Welcome Message
# Basic info
HOSTNAME=`uname -n`

# System load
MEMORY1=`free -t -g | grep Total | awk '{print $3" GB";}'`
MEMORY2=`free -t -g | grep "Mem" | awk '{print $2" GB";}'`

echo "Hostname: $HOSTNAME"
echo "Memory used: $MEMORY1 / $MEMORY2"
uptime

## Use: "regenerate"
## Allows you to change the random color assigned to the host in the prompt on initial login
## The generate function will be called when you first log in
function generate() {
    echo "export PHP_IDE_CONFIG='serverName="$HOSTNAME"'" >  ~/.bashrc_this_server
    echo "export HOST_COLOR=\"\\[\\033[1;"$(( ( RANDOM % 15 )  + 31 ))"m\\]\"" >> ~/.bashrc_this_server
}
function regenerate() {
    generate
    source ~/.commonrc
}
if [ ! -f ~/.bashrc_this_server ]; then
    generate
fi
source ~/.bashrc_this_server

## Use: "key {ssh filename suffix}"
## Allows you to switch between ssh keys easily
function key() {
    if [ ! -f ~/.ssh/id_rsa_old ]; then
       cp ~/.ssh/id_rsa ~/.ssh/id_rsa_old
       cp ~/.ssh/id_rsa.pub ~/.ssh/id_rsa_old.pub
    fi
    cp ~/.ssh/id_rsa.$1 ~/.ssh/id_rsa
    cp ~/.ssh/id_rsa.pub.$1 ~/.ssh/id_rsa.pub
}

## Use: "authorize {user}@{servername}"
## Allows easy installation of authorization keys on remote server
function authorize() {
    if [ ! -f ~/.ssh/id_rsa.pub ]; then
       ssh-keygen
    fi
    cat ~/.ssh/id_rsa.pub | /usr/bin/ssh $@ 'cat >> ~/.ssh/authorized_keys'
}
alias passwordless="authorize"
alias keyless="authorize"

## Use: Up/Down arrows for searching history with current input
unset HISTFILESIZE
HISTSIZE=9999999
HISTFILESIZE=99999999
shopt -s histappend
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\eOA": history-search-backward'
bind '"\eOB": history-search-forward'

APPLICATION_ENV="testing"
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true

## General aliases
alias ls="ls --color=auto"
alias ll="ls -lh"
alias calculator="bc --quiet"
alias bc="bc --quiet"
function calc() {
    echo $@ | bc --quiet
}
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

unset PROMPT_COMMAND
PROMPT_COMMAND="${PROMPT_COMMAND:-:} ; history -a"
function prompt_right() {
   echo -e "\033[0;0m\\\D{%s}\033[0m"
}
function prompt_left() {
   if [ $(id -u) -eq 0 ]; then
      echo -e "\e[1;31m##\033[0m \u@$HOST_COLOR\h\[\033[0m\]:\w$(__git_ps1)"
   else
      echo -e "\u@$HOST_COLOR\h\[\033[0m\]:\w$(__git_ps1)"
   fi
}

function print_pre_prompt() {
    compensate=5
    export WINDOW_TITLE="\033]0;${USER}@${HOSTNAME} ($(cat /proc/loadavg | cut -d' ' -f1-3))\a"
    if [ $(id -u) -eq 0 ]; then
        PS1=$WINDOW_TITLE$(printf "\n%*s\r%s\n\! # " "$(($(tput cols)+${compensate}))" "$(prompt_right)" "$(prompt_left)")
    else
        PS1=$WINDOW_TITLE$(printf "\n%*s\r%s\n\! \$ " "$(($(tput cols)+${compensate}))" "$(prompt_right)" "$(prompt_left)")
    fi
}
PROMPT_COMMAND="${PROMPT_COMMAND:-:} ; print_pre_prompt"

## Use: "unixdate {1565894972 - seconds since epoch}"
## Allows easy conversion of unix time to human readable date/time
function unixdate() {
    if [ $# -eq 0 ]; then
        date --date="@$(history | tail -n 1 | cut -d" " -f6)";
    else
        date --date="@$@";
    fi
}
alias unixtime=unixdate
## Use: "- {history item}"
## Shows a human readable date/time for any history item
function -() {
    unixtime $(history | grep " $1 " | cut -d" " -f6)
}
## Use: "_ {search history}"
## Example: "_ ssh" returns all servers logged into
## Allows to search history for any command and prompt to repeat it
function _() {
    export HISTSEARCH="$@"
    cat ~/.bash_history ~/logs/bash_history/* | grep -v "^\#" | grep "^$HISTSEARCH" | sort -u | nl
    echo "Make selection: "
    read selection
    eval $(cat ~/.bash_history ~/logs/bash_history/* | grep -v "^\#" | grep "^$HISTSEARCH" | sort -u | tail -n +$selection | head -n 1)
}
export XDEBUG_CONFIG="idekey=PHPSTORM_CLI remote_enable=1 remote_host=172.16.24.83 remote_port=9000 remote_handler=dbgp remote_mode=req"
